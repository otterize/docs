"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2229],{5680:(e,t,a)=>{a.d(t,{xA:()=>g,yg:()=>d});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},g=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,d=u["".concat(s,".").concat(m)]||u[m]||c[m]||i;return a?n.createElement(d,o(o({ref:t},g),{},{components:a})):n.createElement(d,o({ref:t},g))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7311:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(8168),r=(a(6540),a(5680));const i={sidebar_position:1,title:"Automated authorization merge requests",image:"/img/quick-tutorials/gitlab/social.png"},o=void 0,l={unversionedId:"features/gitlab/tutorials/automated-merge-requests",id:"features/gitlab/tutorials/automated-merge-requests",title:"Automated authorization merge requests",description:"Otterize integrates with GitLab projects to automatically generate merge requests as application access requirements change in the cluster. This enables platform administrators to continuously align security requirements with code updates.",source:"@site/docs/features/gitlab/tutorials/automated-merge-requests.mdx",sourceDirName:"features/gitlab/tutorials",slug:"/features/gitlab/tutorials/automated-merge-requests",permalink:"/features/gitlab/tutorials/automated-merge-requests",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/features/gitlab/tutorials/automated-merge-requests.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Automated authorization merge requests",image:"/img/quick-tutorials/gitlab/social.png"},sidebar:"docSidebar",previous:{title:"GitLab | Overview",permalink:"/features/gitlab/"},next:{title:"Reference",permalink:"/features/gitlab/reference"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"CLI tools",id:"cli-tools",level:3},{value:"Deploy Otterize",id:"deploy-otterize",level:3},{value:"Tutorial",id:"tutorial",level:2},{value:"Deploy the application",id:"deploy-the-application",level:3},{value:"Export and apply ClientIntents",id:"export-and-apply-clientintents",level:3},{value:"Create the GitLab repository",id:"create-the-gitlab-repository",level:3},{value:"Add the GitLab repository to Otterize Cloud",id:"add-the-gitlab-repository-to-otterize-cloud",level:3},{value:"Update the application",id:"update-the-application",level:3},{value:"Check for a new merge request",id:"check-for-a-new-merge-request",level:3},{value:"Teardown",id:"teardown",level:2}],g={toc:p},u="wrapper";function c(e){let{components:t,...a}=e;return(0,r.yg)(u,(0,n.A)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Otterize integrates with GitLab projects to automatically generate merge requests as application access requirements change in the cluster. This enables platform administrators to continuously align security requirements with code updates."),(0,r.yg)("p",null,"In this tutorial, you will:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Deploy a sample application."),(0,r.yg)("li",{parentName:"ul"},"Create a Git repository to store ClientIntents manifests."),(0,r.yg)("li",{parentName:"ul"},"Integrate a new Git repository into Otterize Cloud and install Otterize\u2019s GitLab app."),(0,r.yg)("li",{parentName:"ul"},"Modify application communication patterns, thereby triggering Otterize to create a merge request with the updated ClientIntents.")),(0,r.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.yg)("h3",{id:"cli-tools"},"CLI tools"),(0,r.yg)("p",null,"You will need the following CLI tools to set up the repository and export ClientIntents:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("a",{parentName:"li",href:"https://docs.otterize.com/overview/installation#install-the-otterize-cli"},"Otterize CLI")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("a",{parentName:"li",href:"https://gitlab.com/gitlab-org/cli"},"GitLab CLI"))),(0,r.yg)("p",null,"After installation, log in  with ",(0,r.yg)("inlineCode",{parentName:"p"},"glab auth login")," and select your preferred method for authentication. Ensure your account has the necessary permissions to create new repositories."),(0,r.yg)("h3",{id:"deploy-otterize"},"Deploy Otterize"),(0,r.yg)("p",null,"With a Kubernetes cluster ready, head over to ",(0,r.yg)("a",{parentName:"p",href:"https://app.otterize.com/"},"Otterize Cloud")," and navigate to the ",(0,r.yg)("a",{parentName:"p",href:"https://app.otterize.com/integrations"},"integrations page")," to deploy Otterize. Follow the provided instructions to integrate your cluster."),(0,r.yg)("h2",{id:"tutorial"},"Tutorial"),(0,r.yg)("h3",{id:"deploy-the-application"},"Deploy the application"),(0,r.yg)("p",null,"Use the following command to set up the tutorial namespace and deploy a sample application simulating a fantasy tabletop game. The application comprises several services responsible for different aspects of the game."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"kubectl apply -n otterize-tutorial-gitlab -f ${ABSOLUTE_URL}/code-examples/gitlab/all.yaml\n")),(0,r.yg)("details",null,(0,r.yg)("summary",null,"View Deployment"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Namespace\nmetadata:\n  name: otterize-tutorial-gitlab\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: adventure\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: adventure\n  template:\n    metadata:\n      labels:\n        app: adventure\n    spec:\n      containers:\n        - name: github-tutorial\n          image: otterize/github-tutorial:latest\n          args: ["./adventure"]\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: character-generator\nspec:\n  selector:\n    matchLabels:\n      app: character-generator\n  template:\n    metadata:\n      labels:\n        app: character-generator\n    spec:\n      containers:\n        - name: github-tutorial\n          image: otterize/github-tutorial:latest\n          args: ["./character-generator"]\n          ports:\n            - containerPort: 8080\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: quest-generator\nspec:\n  selector:\n    matchLabels:\n      app: quest-generator\n  template:\n    metadata:\n      labels:\n        app: quest-generator\n    spec:\n      containers:\n        - name: github-tutorial\n          image: otterize/github-tutorial:latest\n          args: ["./quest-generator"]\n          ports:\n            - containerPort: 8080\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: monster-generator\nspec:\n  selector:\n    matchLabels:\n      app: monster-generator\n  template:\n    metadata:\n      labels:\n        app: monster-generator\n    spec:\n      containers:\n        - name: github-tutorial\n          image: otterize/github-tutorial:latest\n          args: ["./monster-generator"]\n          ports:\n            - containerPort: 8080\n\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: treasure-generator\nspec:\n  selector:\n    matchLabels:\n      app: treasure-generator\n  template:\n    metadata:\n      labels:\n        app: treasure-generator\n    spec:\n      containers:\n        - name: github-tutorial\n          image: otterize/github-tutorial:latest\n          args: ["./treasure-generator"]\n          ports:\n            - containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: treasure-generator\nspec:\n  type: ClusterIP\n  selector:\n    app: treasure-generator\n  ports:\n    - name: http\n      port: 8080\n      targetPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: character-generator\nspec:\n  type: ClusterIP\n  selector:\n    app: character-generator\n  ports:\n    - name: http\n      port: 8080\n      targetPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: monster-generator\nspec:\n  type: ClusterIP\n  selector:\n    app: monster-generator\n  ports:\n    - name: http\n      port: 8080\n      targetPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: quest-generator\nspec:\n  type: ClusterIP\n  selector:\n    app: quest-generator\n  ports:\n    - name: http\n      port: 8080\n      targetPort: 8080\n---\n'))),(0,r.yg)("p",null,"Once the deployment is complete, you can view the application's network map on Otterize Cloud. Turn on ",(0,r.yg)("inlineCode",{parentName:"p"},"Assume default deny")," under network policies, as shown in the picture below."),(0,r.yg)("img",{src:"/img/quick-tutorials/gitlab/visual-graph-assume-default-deny.png",alt:"visual graph of default deny network policy",style:{width:200}}),(0,r.yg)("p",null,"The connections will turn red."),(0,r.yg)("img",{src:"/img/quick-tutorials/gitlab/visual-graph-unsecure-deploy.png",alt:"visual graph of cluster deployment"}),(0,r.yg)("h3",{id:"export-and-apply-clientintents"},"Export and apply ClientIntents"),(0,r.yg)("p",null,"Otterize can automatically generate application access rules based on the actual network traffic detected by the network-mapper."),(0,r.yg)("p",null,"Use the Otterize CLI tool to export the recommended intent definitions. You can also access these definitions directly from the Access Graph on Otterize Cloud."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"mkdir otterize-tutorial-gitlab\ncd otterize-tutorial-gitlab\nmkdir intents\notterize network-mapper export -n otterize-tutorial-gitlab > ./intents/intents.yaml\n")),(0,r.yg)("details",null,(0,r.yg)("summary",null,"View intents.yaml"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: k8s.otterize.com/v1alpha3\nkind: ClientIntents\nmetadata:\n  name: adventure\n  namespace: otterize-tutorial-gitlab\nspec:\n  service:\n    name: adventure\n  calls:\n    - name: character-generator\n    - name: monster-generator\n    - name: quest-generator\n    - name: treasure-generator\n"))),(0,r.yg)("p",null,"Next, secure the application's pods by applying these intents to the cluster."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -n otterize-tutorial-gitlab -f ./intents/intents.yaml\n")),(0,r.yg)("p",null,"In the Access Graph, the ",(0,r.yg)("em",{parentName:"p"},"adventure")," client is now allowed to access the protected services."),(0,r.yg)("img",{src:"/img/quick-tutorials/gitlab/protected-services.gif",alt:"visual graph of cluster deployment with protected edges"}),(0,r.yg)("h3",{id:"create-the-gitlab-repository"},"Create the GitLab repository"),(0,r.yg)("p",null,"To ensure versioned records, create a GitLab repository, stage and commit the applied intents. Then push the changes to the main branch."),(0,r.yg)("p",null,"Make sure you are in the ",(0,r.yg)("inlineCode",{parentName:"p"},"otterize-tutorial-gitlab")," directory before executing the following commands."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"export GLAB_USER=$(glab api user | jq -r '.username')\nglab repo create otterize-tutorial-gitlab --private\ngit init\ngit add .\ngit commit -m \"Initial Intents\"\ngit branch -M main\n\n# for HTTPS access, use git remote add origin https://gitlab.com/$GLAB_USER/otterize-tutorial-gitlab.git\ngit remote add origin git@gitlab.com:$GLAB_USER/otterize-tutorial-gitlab.git\ngit push -u origin main\n")),(0,r.yg)("p",null,"The repository can now be integrated to Otterize cloud to detect drifts in case of changes in traffic patterns."),(0,r.yg)("h3",{id:"add-the-gitlab-repository-to-otterize-cloud"},"Add the GitLab repository to Otterize Cloud"),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"In this section, you will use the ",(0,r.yg)("em",{parentName:"p"},"main")," branch to track ClientIntents changes. For production environments, we recommend monitoring traffic changes in other long-held branches, such as ",(0,r.yg)("em",{parentName:"p"},"development"),", ",(0,r.yg)("em",{parentName:"p"},"test"),", or ",(0,r.yg)("em",{parentName:"p"},"staging"),". You can then deploy the new compiled ClientIntents in production with your preferred tool.")),(0,r.yg)("p",null,"To add the repository to Otterize Cloud, navigate to the ",(0,r.yg)("a",{parentName:"p",href:"https://app.otterize.com/integrations"},"Integrations page"),"."),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Click ",(0,r.yg)("inlineCode",{parentName:"li"},"Add Integration"),"."),(0,r.yg)("li",{parentName:"ol"},"Select integration type: ",(0,r.yg)("inlineCode",{parentName:"li"},"GitLab"),"."),(0,r.yg)("li",{parentName:"ol"},"Provide the name ",(0,r.yg)("em",{parentName:"li"},"otterize-tutorial-gitlab")," as the integration."),(0,r.yg)("li",{parentName:"ol"},"In the ",(0,r.yg)("inlineCode",{parentName:"li"},"On Trigger")," section, select your Kubernetes cluster, and leave the other options set to the predefined defaults."),(0,r.yg)("li",{parentName:"ol"},"In the ",(0,r.yg)("inlineCode",{parentName:"li"},"Open merge request on")," section, select the ",(0,r.yg)("inlineCode",{parentName:"li"},"Project")," field, and provide the owner and organization names in the form: ",(0,r.yg)("em",{parentName:"li"},"<gitlab user name",">","/otterize-tutorial-gitlab"),"."),(0,r.yg)("li",{parentName:"ol"},"Select the ",(0,r.yg)("inlineCode",{parentName:"li"},"Base Branch")," field, and enter ",(0,r.yg)("em",{parentName:"li"},"main"),"."),(0,r.yg)("li",{parentName:"ol"},"Select the ",(0,r.yg)("inlineCode",{parentName:"li"},"ClientIntents path")," field, and enter ",(0,r.yg)("inlineCode",{parentName:"li"},"intents"),". It represents the relative path hosting the ClientIntents manifests."),(0,r.yg)("li",{parentName:"ol"},"Next, click the ",(0,r.yg)("inlineCode",{parentName:"li"},"Add")," button. This will redirect you to GitLab. If needed, click ",(0,r.yg)("inlineCode",{parentName:"li"},"Authorize")," to authorize the Otterize Cloud GitLab app to use your account.")),(0,r.yg)("img",{className:"tw-w-96 tw-block tw-mx-auto tw-mb-4",src:"/img/quick-tutorials/gitlab/authorize-gitlab-app.png",alt:"GitLab App Authorize Example"}),(0,r.yg)("p",null,"The Otterize GitLab app is now installed in your account. Otterize will continuously monitor for differences between the ClientIntents definitions in your repository and the actual usage detected in your cluster. If drifts are detected, merge requests will be automatically opened to update the intent definitions and reflect the new usage behaviors."),(0,r.yg)("p",null,"You can learn more about GitLab configuration and how to use the Triggers on the ",(0,r.yg)("a",{parentName:"p",href:"/features/gitlab/reference"},"Reference page")),(0,r.yg)("h3",{id:"update-the-application"},"Update the application"),(0,r.yg)("p",null,"In the original deployment, the game simulation's ",(0,r.yg)("em",{parentName:"p"},"adventure")," pod utilized the ",(0,r.yg)("em",{parentName:"p"},"monster-generator")," pod to fetch a random monster. An improved version, ",(0,r.yg)("em",{parentName:"p"},"monster-generator-v2"),", has just been released and is ready for deployment."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -n otterize-tutorial-gitlab -f ${ABSOLUTE_URL}/code-examples/gitlab/all-v2.yaml\n")),(0,r.yg)("p",null,"Once the pod is deployed, check the logs of the ",(0,r.yg)("em",{parentName:"p"},"adventure")," pod using the command below. It should reflect the new application version."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"kubectl logs -f -n otterize-tutorial-gitlab deploy/adventure\n")),(0,r.yg)("p",null,"Here is an example of the expected output."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"****************************************************\nLet another great adventure begin!\n****************************************************\nUsing MonsterV2 generated monster\nWelcome to your adventure, Elf Wizard!\nYour quest: Escort the Caravan\nBeware, a wild Elephant appears!\nThe Elephant has 90 hit points, Our Elf has 244 points.\n---------------------------------------------\nElf lands a 19 point strike against the smelly Beast!\nElephant hits our strong Elf doing 20 point of damage.\nThe Elephant has 71 hit points, Our Elf has 224 points.\n")),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"monster-generator-v2")," is now displayed in Otterize Cloud Access Graph."),(0,r.yg)("img",{src:"/img/quick-tutorials/gitlab/visual-graph-updated-services.png",alt:"visual graph of cluster deployment"}),(0,r.yg)("h3",{id:"check-for-a-new-merge-request"},"Check for a new merge request"),(0,r.yg)("p",null,"Following the introduction of a new application component, the network-mapper has detected a new connection and updated Otterize cloud. This update has triggered the GitLab integration, resulting in the submission of a new merge request."),(0,r.yg)("img",{src:"/img/quick-tutorials/gitlab/merge-request.png",alt:"GitLab merge request"}),(0,r.yg)("p",null,"Finally, merge the merge request and deploy the updated ClientIntents manifest."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},"glab mr merge 1 -y\nkubectl apply -n otterize-tutorial-gitlab -f ./intents/intents.yaml\n")),(0,r.yg)("h2",{id:"teardown"},"Teardown"),(0,r.yg)("p",null,"Delete the application."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-*bash*"},"kubectl delete namespace otterize-tutorial-gitlab\n")),(0,r.yg)("p",null,"Delete the Git repository with the following command:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"glab repo delete $GLAB_USER/otterize-tutorial-gitlab\n")),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"If your API doesn't grant ",(0,r.yg)("em",{parentName:"p"},"delete")," privileges, navigate to the repository's ",(0,r.yg)("em",{parentName:"p"},"Settings")," section to delete it manually.")),(0,r.yg)("p",null,"Finally, you can delete your local copy of the repository."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cd ..\nrm -rf otterize-tutorial-gitlab\n")))}c.isMDXComponent=!0}}]);