"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8809,7918],{5162:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),l=n(6010);const o={tabItem:"tabItem_Ymn6"};function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(o.tabItem,r),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>v});var a=n(7462),l=n(7294),o=n(6010),r=n(2466),i=n(6550),s=n(1980),c=n(7392),p=n(12);function u(e){return function(e){return l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:l}}=e;return{value:t,label:n,attributes:a,default:l}}))}function d(e){const{values:t,children:n}=e;return(0,l.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,l.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function k(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=d(e),[r,i]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,c]=h({queryString:n,groupId:a}),[u,k]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,p.Nk)(n);return[a,(0,l.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),g=(()=>{const e=s??u;return m({value:e,tabValues:o})?e:null})();(0,l.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:r,selectValue:(0,l.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),k(e)}),[c,k,o]),tabValues:o}}var g=n(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function w(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:c}=e;const p=[],{blockElementScrollPositionUntilNextRender:u}=(0,r.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),a=c[n].value;a!==i&&(u(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:r}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:d},r,{className:(0,o.Z)("tabs__item",b.tabItem,r?.className,{"tabs__item--active":i===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function f(e){const t=k(e);return l.createElement("div",{className:(0,o.Z)("tabs-container",b.tabList)},l.createElement(w,(0,a.Z)({},e,t)),l.createElement(y,(0,a.Z)({},e,t)))}function v(e){const t=(0,g.Z)();return l.createElement(f,(0,a.Z)({key:String(t)},e))}},3155:(e,t,n)=>{n.d(t,{Z:()=>Z});var a=n(7462),l=n(7294),o=n(2389),r=n(6010),i=n(6412),s=n(5281),c=n(7016);const p={codeBlockContainer:"codeBlockContainer_APcc"};function u(e){let{as:t,...n}=e;const o=(0,i.p)(),u=(0,c.QC)(o);return l.createElement(t,(0,a.Z)({},n,{style:u,className:(0,r.Z)(n.className,p.codeBlockContainer,s.k.common.codeBlock)}))}const d={codeBlockContent:"codeBlockContent_m3Ux",codeBlockTitle:"codeBlockTitle_P25_",codeBlock:"codeBlock_qGQc",codeBlockStandalone:"codeBlockStandalone_zC50",codeBlockLines:"codeBlockLines_p187",codeBlockLinesWithNumbering:"codeBlockLinesWithNumbering_OFgW",buttonGroup:"buttonGroup_6DOT"};function m(e){let{children:t,className:n}=e;return l.createElement(u,{as:"pre",tabIndex:0,className:(0,r.Z)(d.codeBlockStandalone,"thin-scrollbar",n)},l.createElement("code",{className:d.codeBlockLines},t))}var h=n(6668),k=n(5448),g=n(3746);const b={codeLine:"codeLine_iPqp",codeLineNumber:"codeLineNumber_F4P7",codeLineContent:"codeLineContent_pOih"};var w=n(4996);function y(e){let{line:t,classNames:n,showLineNumbers:o,getLineProps:i,getTokenProps:s}=e;1===t.length&&"\n"===t[0].content&&(t[0].content="");const c=i({line:t,className:(0,r.Z)(n,o&&b.codeLine)}),p=t.map(((e,t)=>l.createElement("span",(0,a.Z)({key:t},s({token:e,key:t})))));return l.createElement("span",c,o?l.createElement(l.Fragment,null,l.createElement("span",{className:b.codeLineNumber}),l.createElement("span",{className:b.codeLineContent},p)):p,l.createElement("br",null))}var f=n(195),v=n(5999),N=n(345),C=n(7666);const T={copyButtonCopied:"copyButtonCopied__QnY",copyButtonIcons:"copyButtonIcons_FhaS",copyButtonIcon:"copyButtonIcon_phi_",copyButtonSuccessIcon:"copyButtonSuccessIcon_FfTR"};function E(e){let{code:t,className:n}=e;const[a,o]=(0,l.useState)(!1),i=(0,l.useRef)(void 0),s=(0,l.useCallback)((()=>{(0,f.Z)(t),o(!0),i.current=window.setTimeout((()=>{o(!1)}),1e3)}),[t]);return(0,l.useEffect)((()=>()=>window.clearTimeout(i.current)),[]),l.createElement("button",{type:"button","aria-label":a?(0,v.I)({id:"theme.CodeBlock.copied",message:"Copied",description:"The copied button label on code blocks"}):(0,v.I)({id:"theme.CodeBlock.copyButtonAriaLabel",message:"Copy code to clipboard",description:"The ARIA label for copy code blocks button"}),title:(0,v.I)({id:"theme.CodeBlock.copy",message:"Copy",description:"The copy button label on code blocks"}),className:(0,r.Z)("clean-btn",n,T.copyButton,a&&T.copyButtonCopied),onClick:s},l.createElement("span",{className:T.copyButtonIcons,"aria-hidden":"true"},l.createElement(N.Z,{className:T.copyButtonIcon}),l.createElement(C.Z,{className:T.copyButtonSuccessIcon})))}var I=n(670);const B={wordWrapButtonIcon:"wordWrapButtonIcon_iowe",wordWrapButtonEnabled:"wordWrapButtonEnabled_gY8A"};function z(e){let{className:t,onClick:n,isEnabled:a}=e;const o=(0,v.I)({id:"theme.CodeBlock.wordWrapToggle",message:"Toggle word wrap",description:"The title attribute for toggle word wrapping button of code block lines"});return l.createElement("button",{type:"button",onClick:n,className:(0,r.Z)("clean-btn",t,a&&B.wordWrapButtonEnabled),"aria-label":o,title:o},l.createElement(I.Z,{className:B.wordWrapButtonIcon,"aria-hidden":"true"}))}function L(e){let{children:t,className:n="",metastring:o,title:s,showLineNumbers:p,language:m}=e;const{prism:{defaultLanguage:b,magicComments:f}}=(0,h.L)(),v=m??(0,c.Vo)(n)??b,N=(0,i.p)(),C=(0,k.F)(),T=(0,c.bc)(o)||s,{lineClassNames:I,code:B}=(0,c.nZ)(t,{metastring:o,language:v,magicComments:f}),L=(0,w.Z)("/",{absolute:!0}).slice(0,-1),Z=B.replaceAll("${ABSOLUTE_URL}",L),x=p??(0,c.nt)(o);return l.createElement(u,{as:"div",className:(0,r.Z)(n,v&&!n.includes(`language-${v}`)&&`language-${v}`)},T&&l.createElement("div",{className:d.codeBlockTitle},T),l.createElement("div",{className:d.codeBlockContent},l.createElement(g.ZP,(0,a.Z)({},g.lG,{theme:N,code:Z,language:v??"text"}),(e=>{let{className:t,tokens:n,getLineProps:a,getTokenProps:o}=e;return l.createElement("pre",{tabIndex:0,ref:C.codeBlockRef,className:(0,r.Z)(t,d.codeBlock,"thin-scrollbar")},l.createElement("code",{className:(0,r.Z)(d.codeBlockLines,x&&d.codeBlockLinesWithNumbering)},n.map(((e,t)=>l.createElement(y,{key:t,line:e,getLineProps:a,getTokenProps:o,classNames:I[t],showLineNumbers:x})))))})),l.createElement("div",{className:d.buttonGroup},(C.isEnabled||C.isCodeScrollable)&&l.createElement(z,{className:d.codeButton,onClick:()=>C.toggle(),isEnabled:C.isEnabled}),l.createElement(E,{className:d.codeButton,code:Z}))))}function Z(e){let{children:t,...n}=e;const r=(0,o.Z)(),i=function(e){return l.Children.toArray(e).some((e=>(0,l.isValidElement)(e)))?e:Array.isArray(e)?e.join(""):e}(t),s="string"==typeof i?L:m;return l.createElement(s,(0,a.Z)({key:String(r)},n),i)}},2137:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var a=n(7462),l=(n(7294),n(3905)),o=(n(3155),n(4866)),r=n(5162);const i={sidebar_position:1,title:"NetworkPolicy Automation",image:"/img/quick-tutorials/network-policies/social.png"},s=void 0,c={unversionedId:"features/network-mapping-network-policies/tutorials/k8s-network-policies",id:"features/network-mapping-network-policies/tutorials/k8s-network-policies",title:"NetworkPolicy Automation",description:"Otterize automates pod-to-pod access control with network policies, within your cluster.",source:"@site/docs/features/network-mapping-network-policies/tutorials/k8s-network-policies.mdx",sourceDirName:"features/network-mapping-network-policies/tutorials",slug:"/features/network-mapping-network-policies/tutorials/k8s-network-policies",permalink:"/features/network-mapping-network-policies/tutorials/k8s-network-policies",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/features/network-mapping-network-policies/tutorials/k8s-network-policies.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"NetworkPolicy Automation",image:"/img/quick-tutorials/network-policies/social.png"},sidebar:"docSidebar",previous:{title:"Mapping a Kubernetes network",permalink:"/features/network-mapping-network-policies/tutorials/k8s-network-mapper"},next:{title:"Protecting a service with network policies",permalink:"/features/network-mapping-network-policies/tutorials/protect-1-service-network-policies"}},p={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Install Otterize on your cluster",id:"install-otterize-on-your-cluster",level:3},{value:"Tutorial",id:"tutorial",level:2},{value:"Deploy the server and the two clients",id:"deploy-the-server-and-the-two-clients",level:3},{value:"Apply intents",id:"apply-intents",level:3},{value:"See it in action",id:"see-it-in-action",level:3},{value:"What did we accomplish?",id:"what-did-we-accomplish",level:3},{value:"What&#39;s next",id:"whats-next",level:3},{value:"Teardown",id:"teardown",level:2}],d={toc:u},m="wrapper";function h(e){let{components:t,...i}=e;return(0,l.kt)(m,(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Otterize automates pod-to-pod access control with network policies, within your cluster."),(0,l.kt)("p",null,"Instead of managing pod identities, labeling clients, servers and namespaces,\nand manually authoring individual network policies, Otterize implements ",(0,l.kt)("strong",{parentName:"p"},"intent-based access control")," (IBAC).\nYou just declare what calls the client pods intend to make,\nand everything is automatically wired together so only intended calls are allowed."),(0,l.kt)("p",null,"In this tutorial, we will:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Deploy a server pod, and two client pods calling it."),(0,l.kt)("li",{parentName:"ul"},"Declare that the first client intends to call the server."),(0,l.kt)("li",{parentName:"ul"},"See that a network policy was autogenerated to allow just that, and block the (undeclared) calls from the other client.")),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("h3",{id:"install-otterize-on-your-cluster"},"Install Otterize on your cluster"),(0,l.kt)("p",null,"To deploy Otterize, head over to ",(0,l.kt)("a",{parentName:"p",href:"https://app.otterize.com"},"Otterize Cloud")," and associate a Kubernetes cluster on the ",(0,l.kt)("a",{parentName:"p",href:"https://app.otterize.com/clusters"},"Clusters page"),", and follow the instructions."),(0,l.kt)("p",null,"We will also need the ",(0,l.kt)("a",{parentName:"p",href:"/overview/installation#install-the-otterize-cli"},"Otterize CLI"),"."),(0,l.kt)("h2",{id:"tutorial"},"Tutorial"),(0,l.kt)("h3",{id:"deploy-the-server-and-the-two-clients"},"Deploy the server and the two clients"),(0,l.kt)("p",null,"Our simple example consists of three pods: an HTTP server and two clients that call it."),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Expand to see the example YAML files"),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"namespace.yaml",label:"namespace.yaml",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Namespace\nmetadata:\n  name: otterize-tutorial-npol\n"))),(0,l.kt)(r.Z,{value:"server.yaml",label:"server.yaml",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: server\n  namespace:  otterize-tutorial-npol\nspec:\n  selector:\n    matchLabels:\n      app: server\n  template:\n    metadata:\n      labels:\n        app: server\n    spec:\n      containers:\n        - name: server\n          image: node:19\n          command: [ "/bin/sh","-c" ]\n          args: [ "echo \\"Hi, I am the server, you called, may I help you?\\" > index.html; npx --yes http-server -p 80 " ]\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: server\n  namespace:  otterize-tutorial-npol\nspec:\n  selector:\n    app: server\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 80\n'))),(0,l.kt)(r.Z,{value:"client.yaml",label:"client.yaml",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: client\n  namespace:  otterize-tutorial-npol\nspec:\n  selector:\n    matchLabels:\n      app: client\n  template:\n    metadata:\n      labels:\n        app: client\n    spec:\n      containers:\n        - name: client\n          image: alpine/curl\n          command: [ "/bin/sh", "-c", "--" ]\n          args: [ "while true; do echo \\"Calling server...\\"; if ! timeout 2 curl -si server 2>/dev/null; then echo \\"curl timed out\\"; fi; sleep 2; done" ]\n'))),(0,l.kt)(r.Z,{value:"client-other.yaml",label:"client-other.yaml",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: client-other\n  namespace:  otterize-tutorial-npol\nspec:\n  selector:\n    matchLabels:\n      app: client-other\n  template:\n    metadata:\n      labels:\n        app: client-other\n    spec:\n      containers:\n        - name: client-other\n          image: alpine/curl\n          command: [ "/bin/sh", "-c", "--" ]\n          args: [ "while true; do echo \\"Calling server...\\"; if ! timeout 2 curl -si server 2>/dev/null; then echo \\"curl timed out\\"; fi; sleep 2; done" ]\n'))))),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Deploy the two clients and the server in their namespace using ",(0,l.kt)("inlineCode",{parentName:"li"},"kubectl"),":")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f ${ABSOLUTE_URL}/code-examples/automate-network-policies/all.yaml\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Optional: check deployment status"),"Check that the client and server pods were deployed",(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pods -n otterize-tutorial-npol\n")),(0,l.kt)("p",null,"You should see"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"NAME                           READY   STATUS    RESTARTS   AGE\nclient-596bcb48d5-pnjxc        1/1     Running   0          8s\nclient-other-f56d65d7f-z2wg2   1/1     Running   0          8s\nserver-6bb4784ccc-wtz7f        1/1     Running   0          8s\n"))),(0,l.kt)("p",null,"Let's monitor both client attempts to call the server with additional terminal windows,\nso we can see the effects of our changes in real time."),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Open a new terminal window ","[client]")," and tail the client log:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl logs -f --tail 1 -n otterize-tutorial-npol deploy/client\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Expected output"),(0,l.kt)("p",null,"At this point the client should be able to communicate with the server:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Calling server...\nHTTP/1.1 200 OK\n...\nHi, I am the server, you called, may I help you?\n"))),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Open another terminal window ","[client-other]")," and tail the client-other log:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl logs -f --tail 1 -n otterize-tutorial-npol deploy/client-other\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Expected output"),(0,l.kt)("p",null,"At this point the client should be able to communicate with the server:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Calling server...\nHTTP/1.1 200 OK\n...\nHi, I am the server, you called, may I help you?\n"))),(0,l.kt)("p",null,"If you've attached Otterize OSS to Otterize Cloud, you can now browse to your account at ",(0,l.kt)("a",{parentName:"p",href:"https://app.otterize.com"},"https://app.otterize.com")," and see the access graph for your cluster:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Access graph",src:n(548).Z,width:"3024",height:"1420"})),(0,l.kt)("h3",{id:"apply-intents"},"Apply intents"),(0,l.kt)("p",null,"We will now declare that the ",(0,l.kt)("strong",{parentName:"p"},"client")," intends to call the ",(0,l.kt)("strong",{parentName:"p"},"server"),"."),(0,l.kt)("p",null,"When the intents YAML is applied, creating a custom resource of type ",(0,l.kt)("inlineCode",{parentName:"p"},"ClientIntents"),",\nOtterize will add a network policy to allow the intended calls\n(",(0,l.kt)("strong",{parentName:"p"},"client")," ","\u2192"," ",(0,l.kt)("strong",{parentName:"p"},"server"),") and fail all unintended calls (e.g., ",(0,l.kt)("strong",{parentName:"p"},"client-other")," ","\u2192"," ",(0,l.kt)("strong",{parentName:"p"},"server"),")."),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"You can click on the services or the lines connecting them to see which ClientIntents you need to apply to make the connection go green!")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Here is the ",(0,l.kt)("inlineCode",{parentName:"li"},"intents.yaml")," declaration of the client, which we will apply below:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: k8s.otterize.com/v1alpha3\nkind: ClientIntents\nmetadata:\n  name: client\n  namespace:  otterize-tutorial-npol\nspec:\n  service:\n    name: client\n  calls:\n    - name: server\n")),(0,l.kt)("h3",{id:"see-it-in-action"},"See it in action"),(0,l.kt)("p",null,"Keep an eye on the logs being tailed in the ",(0,l.kt)("strong",{parentName:"p"},"[client-other]")," terminal window,\nand apply this ",(0,l.kt)("inlineCode",{parentName:"p"},"intents.yaml")," file in your ",(0,l.kt)("strong",{parentName:"p"},"main terminal window")," using:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f ${ABSOLUTE_URL}/code-examples/automate-network-policies/intents.yaml\n")),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Client intents are the cornerstone of ",(0,l.kt)("a",{parentName:"p",href:"/intent-based-access-control"},"intent-based access control (IBAC)"),".")),(0,l.kt)("p",null,"as expected since it didn't declare its intents:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"Calling server...\nHTTP/1.1 200 OK\n...\nHi, I am the server, you called, may I help you?  # <- before applying the intents file\n# highlight-start\nCalling server...                                 # <- after applying the intents file\ncurl timed out\nCalling server...\ncurl timed out\n# highlight-end\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Not seeing the time out?"),(0,l.kt)("p",null,"If client-other isn't timing out, then the installed CNI plugin likely does not support network policies.\nConsult the docs for your Kubernetes distribution or head back to the ",(0,l.kt)("a",{parentName:"p",href:"#prerequisites"},"Calico installation section")," to install one.\nFor example, Minikube does not start by default with a CNI that supports network policies\nbut you can ask it to start with one that does, such as Calico.")),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"And in the ",(0,l.kt)("strong",{parentName:"li"},"[client]")," terminal you should see that calls go through, as expected since they were declared:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"Calling server...\nHTTP/1.1 200 OK\n...\nHi, I am the server, you called, may I help you?\n")),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},"You should also see that a new network policy was created:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get NetworkPolicies -n otterize-tutorial-npol\n")),(0,l.kt)("p",null,"This should return:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"NAME                                           POD-SELECTOR                                         AGE\naccess-to-server-from-otterize-tutorial-npol   otterize/server=server-otterize-tutorial-np-7e16db   6s\n")),(0,l.kt)("p",null,"If you've attached Otterize OSS to Otterize Cloud, go back to see the ",(0,l.kt)("a",{parentName:"p",href:"https://app.otterize.com"},"access graph in your browser"),":"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Access graph",src:n(9334).Z,width:"3100",height:"1726"})),(0,l.kt)("p",null,"It's now clear what happened:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"The server is now protected, and is also blocking some of its clients. Click on it to see what to do about it."),(0,l.kt)("li",{parentName:"ol"},"Calls from ",(0,l.kt)("strong",{parentName:"li"},"[client]")," are declared and therefore allowed (green line)."),(0,l.kt)("li",{parentName:"ol"},"Calls from ",(0,l.kt)("strong",{parentName:"li"},"[client-other]")," are not declared and therefore blocked (red line). Click on the line to see what to do about it.")),(0,l.kt)("admonition",{title:"Done!",type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Otterize did its job of both protecting the server ",(0,l.kt)("em",{parentName:"p"},"and")," allowing intended access.")),(0,l.kt)("h3",{id:"what-did-we-accomplish"},"What did we accomplish?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Controlling access through network policies no longer means touching network policies at all.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Clients simply declare what they need to access with their intents files.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"The next ",(0,l.kt)("inlineCode",{parentName:"p"},"kubectl apply")," ensures that network policies automatically reflect the intended pod-to-pod access."))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Expand to see what happened behind the scenes"),(0,l.kt)("p",null,"Otterize generated a specific network policy on the ingress of the pods of a server, allowing the server to\nbe accessed by the pods of a client. Otterize uses labels to define the network policy and associate it\nwith a server in a namespace and a client in a namespace, as follows:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"The server's pods are given a label ",(0,l.kt)("inlineCode",{parentName:"li"},"intents.otterize.com/server")," whose value uniquely represents that server.\nThe network policy stipulates that it applies to the ingress of server pods with this label."),(0,l.kt)("li",{parentName:"ol"},"The client's pods are given a label ",(0,l.kt)("inlineCode",{parentName:"li"},"intents.otterize.com/access-...")," derived from the server's unique ",(0,l.kt)("inlineCode",{parentName:"li"},"intents.otterize.com/server")," value.\nThe network policy stipulates that only client pods with this matching label can access the server."),(0,l.kt)("li",{parentName:"ol"},"The client's namespace is given a label ",(0,l.kt)("inlineCode",{parentName:"li"},"intents.otterize.com/namespace-name")," whose value is the namespace of the client.\nThe network policy stipulates that only client pods whose namespaces have this label can access the server.\nThis is used to allow cross-namespace intents.")),(0,l.kt)("p",null,"Otterize saved us from doing all this work by simply declaring the client's intents in ",(0,l.kt)("inlineCode",{parentName:"p"},"intents.yaml"),",\nwhile the appropriate network policies were managed automatically behind the scenes."),(0,l.kt)("p",null,"Further information about network policies and Otterize can be found\n",(0,l.kt)("a",{parentName:"p",href:"/reference/access-controls/network-policies"},"here"),".")),(0,l.kt)("admonition",{title:"Bonus tutorial",type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Try to create an intents file yourself for ",(0,l.kt)("strong",{parentName:"p"},"client-other"),", and apply it to allow this other client to call the server.")),(0,l.kt)("h3",{id:"whats-next"},"What's next"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Get started with the ",(0,l.kt)("a",{parentName:"li",href:"/quickstart/visualization/k8s-network-mapper"},"Otterize network mapper")," to help you bootstrap intents files\nfor use in ",(0,l.kt)("a",{parentName:"li",href:"/intent-based-access-control"},"intent-based access control (IBAC)"),".")),(0,l.kt)("h2",{id:"teardown"},"Teardown"),(0,l.kt)("p",null,"To remove the deployed examples run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete namespace otterize-tutorial-npol\n")))}h.isMDXComponent=!0},548:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/base-261ed9b2ede946a8f582c407f6b64d3f.png"},9334:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/protected-0a01c2ba90bcb8ec869b09ebabca7074.png"}}]);