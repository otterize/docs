"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2527,7918],{5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),o=n(6010);const i={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(i.tabItem,l),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>v});var a=n(7462),o=n(7294),i=n(6010),l=n(2466),r=n(6550),s=n(1980),c=n(7392),u=n(12);function p(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}function d(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,r.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(i),(0,o.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function k(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=d(e),[l,r]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[s,c]=h({queryString:n,groupId:a}),[p,k]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,u.Nk)(n);return[a,(0,o.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),g=(()=>{const e=s??p;return m({value:e,tabValues:i})?e:null})();(0,o.useLayoutEffect)((()=>{g&&r(g)}),[g]);return{selectedValue:l,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);r(e),c(e),k(e)}),[c,k,i]),tabValues:i}}var g=n(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:t,block:n,selectedValue:r,selectValue:s,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),a=c[n].value;a!==r&&(p(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:l}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:d},l,{className:(0,i.Z)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":r===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=k(e);return o.createElement("div",{className:(0,i.Z)("tabs-container",b.tabList)},o.createElement(f,(0,a.Z)({},e,t)),o.createElement(y,(0,a.Z)({},e,t)))}function v(e){const t=(0,g.Z)();return o.createElement(w,(0,a.Z)({key:String(t)},e))}},3155:(e,t,n)=>{n.d(t,{Z:()=>A});var a=n(7462),o=n(7294),i=n(2389),l=n(6010),r=n(6412),s=n(5281),c=n(7016);const u={codeBlockContainer:"codeBlockContainer_APcc"};function p(e){let{as:t,...n}=e;const i=(0,r.p)(),p=(0,c.QC)(i);return o.createElement(t,(0,a.Z)({},n,{style:p,className:(0,l.Z)(n.className,u.codeBlockContainer,s.k.common.codeBlock)}))}const d={codeBlockContent:"codeBlockContent_m3Ux",codeBlockTitle:"codeBlockTitle_P25_",codeBlock:"codeBlock_qGQc",codeBlockStandalone:"codeBlockStandalone_zC50",codeBlockLines:"codeBlockLines_p187",codeBlockLinesWithNumbering:"codeBlockLinesWithNumbering_OFgW",buttonGroup:"buttonGroup_6DOT"};function m(e){let{children:t,className:n}=e;return o.createElement(p,{as:"pre",tabIndex:0,className:(0,l.Z)(d.codeBlockStandalone,"thin-scrollbar",n)},o.createElement("code",{className:d.codeBlockLines},t))}var h=n(6668),k=n(5448),g=n(3746);const b={codeLine:"codeLine_iPqp",codeLineNumber:"codeLineNumber_F4P7",codeLineContent:"codeLineContent_pOih"};var f=n(4996);function y(e){let{line:t,classNames:n,showLineNumbers:i,getLineProps:r,getTokenProps:s}=e;1===t.length&&"\n"===t[0].content&&(t[0].content="");const c=r({line:t,className:(0,l.Z)(n,i&&b.codeLine)}),u=t.map(((e,t)=>o.createElement("span",(0,a.Z)({key:t},s({token:e,key:t})))));return o.createElement("span",c,i?o.createElement(o.Fragment,null,o.createElement("span",{className:b.codeLineNumber}),o.createElement("span",{className:b.codeLineContent},u)):u,o.createElement("br",null))}var w=n(195),v=n(5999),N=n(345),T=n(7666);const I={copyButtonCopied:"copyButtonCopied__QnY",copyButtonIcons:"copyButtonIcons_FhaS",copyButtonIcon:"copyButtonIcon_phi_",copyButtonSuccessIcon:"copyButtonSuccessIcon_FfTR"};function C(e){let{code:t,className:n}=e;const[a,i]=(0,o.useState)(!1),r=(0,o.useRef)(void 0),s=(0,o.useCallback)((()=>{(0,w.Z)(t),i(!0),r.current=window.setTimeout((()=>{i(!1)}),1e3)}),[t]);return(0,o.useEffect)((()=>()=>window.clearTimeout(r.current)),[]),o.createElement("button",{type:"button","aria-label":a?(0,v.I)({id:"theme.CodeBlock.copied",message:"Copied",description:"The copied button label on code blocks"}):(0,v.I)({id:"theme.CodeBlock.copyButtonAriaLabel",message:"Copy code to clipboard",description:"The ARIA label for copy code blocks button"}),title:(0,v.I)({id:"theme.CodeBlock.copy",message:"Copy",description:"The copy button label on code blocks"}),className:(0,l.Z)("clean-btn",n,I.copyButton,a&&I.copyButtonCopied),onClick:s},o.createElement("span",{className:I.copyButtonIcons,"aria-hidden":"true"},o.createElement(N.Z,{className:I.copyButtonIcon}),o.createElement(T.Z,{className:I.copyButtonSuccessIcon})))}var E=n(670);const z={wordWrapButtonIcon:"wordWrapButtonIcon_iowe",wordWrapButtonEnabled:"wordWrapButtonEnabled_gY8A"};function B(e){let{className:t,onClick:n,isEnabled:a}=e;const i=(0,v.I)({id:"theme.CodeBlock.wordWrapToggle",message:"Toggle word wrap",description:"The title attribute for toggle word wrapping button of code block lines"});return o.createElement("button",{type:"button",onClick:n,className:(0,l.Z)("clean-btn",t,a&&z.wordWrapButtonEnabled),"aria-label":i,title:i},o.createElement(E.Z,{className:z.wordWrapButtonIcon,"aria-hidden":"true"}))}function L(e){let{children:t,className:n="",metastring:i,title:s,showLineNumbers:u,language:m}=e;const{prism:{defaultLanguage:b,magicComments:w}}=(0,h.L)(),v=m??(0,c.Vo)(n)??b,N=(0,r.p)(),T=(0,k.F)(),I=(0,c.bc)(i)||s,{lineClassNames:E,code:z}=(0,c.nZ)(t,{metastring:i,language:v,magicComments:w}),L=(0,f.Z)("/",{absolute:!0}).slice(0,-1),A=z.replaceAll("${ABSOLUTE_URL}",L),S=u??(0,c.nt)(i);return o.createElement(p,{as:"div",className:(0,l.Z)(n,v&&!n.includes(`language-${v}`)&&`language-${v}`)},I&&o.createElement("div",{className:d.codeBlockTitle},I),o.createElement("div",{className:d.codeBlockContent},o.createElement(g.ZP,(0,a.Z)({},g.lG,{theme:N,code:A,language:v??"text"}),(e=>{let{className:t,tokens:n,getLineProps:a,getTokenProps:i}=e;return o.createElement("pre",{tabIndex:0,ref:T.codeBlockRef,className:(0,l.Z)(t,d.codeBlock,"thin-scrollbar")},o.createElement("code",{className:(0,l.Z)(d.codeBlockLines,S&&d.codeBlockLinesWithNumbering)},n.map(((e,t)=>o.createElement(y,{key:t,line:e,getLineProps:a,getTokenProps:i,classNames:E[t],showLineNumbers:S})))))})),o.createElement("div",{className:d.buttonGroup},(T.isEnabled||T.isCodeScrollable)&&o.createElement(B,{className:d.codeButton,onClick:()=>T.toggle(),isEnabled:T.isEnabled}),o.createElement(C,{className:d.codeButton,code:A}))))}function A(e){let{children:t,...n}=e;const l=(0,i.Z)(),r=function(e){return o.Children.toArray(e).some((e=>(0,o.isValidElement)(e)))?e:Array.isArray(e)?e.join(""):e}(t),s="string"==typeof r?L:m;return o.createElement(s,(0,a.Z)({key:String(l)},n),r)}},8646:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));n(3155),n(4866),n(5162);const i={sidebar_position:3,title:"Istio AuthorizationPolicy automation",image:"/img/quick-tutorials/k8s-istio-authorization-policies/social.png"},l=void 0,r={unversionedId:"features/istio/tutorials/k8s-istio-authorization-policies",id:"features/istio/tutorials/k8s-istio-authorization-policies",title:"Istio AuthorizationPolicy automation",description:"Otterize automates mTLS-based, HTTP-level pod-to-pod access control with Istio authorization (authZ) policies, within your Kubernetes cluster.",source:"@site/docs/features/istio/tutorials/k8s-istio-authorization-policies.mdx",sourceDirName:"features/istio/tutorials",slug:"/features/istio/tutorials/k8s-istio-authorization-policies",permalink:"/features/istio/tutorials/k8s-istio-authorization-policies",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/features/istio/tutorials/k8s-istio-authorization-policies.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Istio AuthorizationPolicy automation",image:"/img/quick-tutorials/k8s-istio-authorization-policies/social.png"},sidebar:"docSidebar",previous:{title:"Istio HTTP-level access mapping",permalink:"/features/istio/tutorials/k8s-istio-watcher"},next:{title:"Reference",permalink:"/features/istio/reference"}},s={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"1. Deploy Otterize",id:"1-deploy-otterize",level:3},{value:"2. Install and configure Istio",id:"2-install-and-configure-istio",level:3},{value:"Tutorial",id:"tutorial",level:2},{value:"Deploy the two clients and the server",id:"deploy-the-two-clients-and-the-server",level:3},{value:"Apply intents",id:"apply-intents",level:3},{value:"See it in action",id:"see-it-in-action",level:3},{value:"What did we accomplish?",id:"what-did-we-accomplish",level:3},{value:"What&#39;s next",id:"whats-next",level:3},{value:"Teardown",id:"teardown",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...i}=e;return(0,o.kt)(p,(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Otterize automates mTLS-based, HTTP-level pod-to-pod access control with Istio authorization (authZ) policies, within your Kubernetes cluster."),(0,o.kt)("p",null,"Implementing this kind of access control with Istio is complicated. For example, authorization policies select servers by label, and clients by service account, so both of those need to be created or updated."),(0,o.kt)("p",null,"To help you avoid manually managing complicated authorization policies per server, Otterize implements ",(0,o.kt)("strong",{parentName:"p"},"intent-based access control")," (IBAC).\nYou just declare what calls the client pods intend to make,\nand everything is automatically wired together so only intended calls are allowed."),(0,o.kt)("p",null,"In this tutorial, we will:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Deploy an Istio demo application with two client pods and one server pod."),(0,o.kt)("li",{parentName:"ul"},"Declare that the first client intends to call the server with a specific HTTP path and method."),(0,o.kt)("li",{parentName:"ul"},"See that an Istio authorization policy was autogenerated to allow just that, and to block the (undeclared) calls from the other client.")),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"Already have Otterize deployed with Istio configured on your cluster? Skip to the ",(0,o.kt)("a",{parentName:"p",href:"#tutorial"},"tutorial"),"."),(0,o.kt)("h3",{id:"1-deploy-otterize"},"1. Deploy Otterize"),(0,o.kt)("p",null,"If you do not have a cluster, we will need to prepare one with ",(0,o.kt)("a",{parentName:"p",href:"/overview/installation#create-a-cluster-with-support-for-network-policies"},"network policy support")),(0,o.kt)("p",null,"To deploy Otterize, head over to ",(0,o.kt)("a",{parentName:"p",href:"https://app.otterize.com"},"Otterize Cloud")," and associate a Kubernetes cluster on the ",(0,o.kt)("a",{parentName:"p",href:"https://app.otterize.com/clusters"},"Clusters page"),", and follow the instructions. If you already have a Kubernetes cluster connected, skip this step."),(0,o.kt)("h3",{id:"2-install-and-configure-istio"},"2. Install and configure Istio"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Install Istio in the cluster via Helm"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"helm repo add istio https://istio-release.storage.googleapis.com/charts\nhelm repo update\nhelm install istio-base istio/base -n istio-system --create-namespace\nhelm install istiod istio/istiod -n istio-system --wait\n"))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Add HTTP methods and request paths to Istio exported metrics"),(0,o.kt)("p",null,"Apply this configuration in the ",(0,o.kt)("inlineCode",{parentName:"p"},"istio-system")," namespace, propagating it to all namespaces covered by the mesh."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"kubectl apply -f ${ABSOLUTE_URL}/code-examples/network-mapper/istio-telemetry-enablement.yaml -n istio-system\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: telemetry.istio.io/v1alpha1\nkind: Telemetry\nmetadata:\n  name: mesh-default\n  namespace: istio-system\nspec:\n  accessLogging:\n    - providers:\n        - name: envoy\n  metrics:\n    - providers:\n        - name: prometheus\n      overrides:\n        - tagOverrides:\n            request_method:\n              value: request.method\n            request_path:\n              value: request.path\n"))),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"HTTP request paths and methods aren't exported in Envoy's connection metrics by default, but we do want to capture those\ndetails when creating the network map. That way we not only have better visibility of the calling patterns,\ne.g. in the access graph, but we can also use that information to automatically generate fine-grained intents and\nenforce them with Istio authorization policies.")),(0,o.kt)("h2",{id:"tutorial"},"Tutorial"),(0,o.kt)("h3",{id:"deploy-the-two-clients-and-the-server"},"Deploy the two clients and the server"),(0,o.kt)("p",null,"Deploy a simple example consisting of ",(0,o.kt)("inlineCode",{parentName:"p"},"client")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"other-client")," calling ",(0,o.kt)("inlineCode",{parentName:"p"},"nginx")," over HTTP:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -n otterize-tutorial-istio -f ${ABSOLUTE_URL}/code-examples/istio-authorization-policies/all.yaml\n")),(0,o.kt)("h3",{id:"apply-intents"},"Apply intents"),(0,o.kt)("p",null,"We will now declare that the ",(0,o.kt)("strong",{parentName:"p"},"client")," intends to call the ",(0,o.kt)("strong",{parentName:"p"},"server")," at a particular HTTP path using a specific HTTP method."),(0,o.kt)("p",null,"When the intents YAML is applied, creating a custom resource of type ",(0,o.kt)("inlineCode",{parentName:"p"},"ClientIntents"),",\nOtterize will add an Istio authorization policy to allow the intended call\n(",(0,o.kt)("strong",{parentName:"p"},"client")," ","\u2192"," ",(0,o.kt)("strong",{parentName:"p"},"server")," with the declared path and method) and block all unintended calls (e.g., ",(0,o.kt)("strong",{parentName:"p"},"client-other")," ","\u2192"," ",(0,o.kt)("strong",{parentName:"p"},"server"),")."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can click on the services or the lines connecting them to see which ClientIntents you need to apply to make the connection go green!")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Here is the ",(0,o.kt)("inlineCode",{parentName:"li"},"intents.yaml")," declaration of the client, which we will apply below:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: k8s.otterize.com/v1alpha3\nkind: ClientIntents\nmetadata:\n  name: client\n  namespace: otterize-tutorial-istio\nspec:\n  service:\n    name: client\n  calls:\n    - name: nginx\n      type: http\n      HTTPResources:\n        - path: /client-path\n          methods: [ GET ]\n")),(0,o.kt)("p",null,"To apply it, use:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -n otterize-tutorial-istio -f ${ABSOLUTE_URL}/code-examples/istio-authorization-policies/intents.yaml\n")),(0,o.kt)("h3",{id:"see-it-in-action"},"See it in action"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Optional: check deployment status"),"Check that the client and server pods were deployed",(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pods -n otterize-tutorial-istio\n")),(0,o.kt)("p",null,"You should see"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"NAME                           READY   STATUS    RESTARTS   AGE\nclient-68b775f766-749r4         2/2     Running   0          32s\nnginx-c646898-2lq7l             2/2     Running   0          32s\nother-client-74cc54f7b5-9rctd   2/2     Running   0          32s\n"))),(0,o.kt)("p",null,"monitor both client attempts to call the server with additional terminal windows,\nso we can see the effects of our changes in real time."),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Open a new terminal window ","[client]")," and tail the client log:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl logs -f --tail 1 -n otterize-tutorial-istio deploy/client\n")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Expected output"),(0,o.kt)("p",null,"At this point the client should be able to communicate with the server:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Calling server...\nHTTP/1.1 200 OK\n...\nhello from /client-path\n"))),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Open another terminal window ","[client-other]")," and tail the other-client log:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl logs -f --tail 1 -n otterize-tutorial-istio deploy/other-client\n")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Expected output"),(0,o.kt)("p",null,"At this point the client should be able to communicate with the server:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Calling server...\nHTTP/1.1 200 OK\n...\nhello from /other-client-path\n"))),(0,o.kt)("p",null,"Keep an eye on the logs being tailed in the ",(0,o.kt)("strong",{parentName:"p"},"[other-client]")," terminal window,\nand apply this ",(0,o.kt)("inlineCode",{parentName:"p"},"intents.yaml")," file in your ",(0,o.kt)("strong",{parentName:"p"},"main terminal window")," using:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f ${ABSOLUTE_URL}/code-examples/istio-authorization-policies/intents.yaml\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Client intents are the cornerstone of ",(0,o.kt)("a",{parentName:"p",href:"/overview/intent-based-access-control"},"intent-based access control (IBAC)"),".")),(0,o.kt)("p",null,"as expected since it didn't declare its intents:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Calling server...\nHTTP/1.1 200 OK\n...\nhello from /other-client-path  # <- before applying the intents file\n# highlight-start\nCalling server...              # <- after applying the intents file\ncurl timed out\nTerminated\n# highlight-end\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"And in the ",(0,o.kt)("strong",{parentName:"li"},"[client]")," terminal you should see that calls go through, as expected since they were declared:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Calling server...\nHTTP/1.1 200 OK\n...\nhello from /client-path\n")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"You should also see that a new Istio authorization policy was created:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get authorizationpolicies.security.istio.io -n otterize-tutorial-istio\n")),(0,o.kt)("p",null,"This should return:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"NAME                                                                AGE\nauthorization-policy-to-nginx-from-client.otterize-tutorial-istio   6s\n")),(0,o.kt)("p",null,"If you've attached Otterize OSS to Otterize Cloud, go back to see the ",(0,o.kt)("a",{parentName:"p",href:"https://app.otterize.com"},"access graph in your browser"),":"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Access graph",src:n(1404).Z,width:"2838",height:"1420"})),(0,o.kt)("p",null,"And upon clicking the green arrow:\n",(0,o.kt)("img",{alt:"Access graph",src:n(6787).Z,width:"2146",height:"1140"})),(0,o.kt)("p",null,"It's now clear what happened:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"The server is now protected, and is also blocking some of its clients."),(0,o.kt)("li",{parentName:"ol"},"Calls from ",(0,o.kt)("strong",{parentName:"li"},"[client]")," ","\u2192"," ",(0,o.kt)("strong",{parentName:"li"},"[nginx]")," are declared and therefore allowed (green arrow)."),(0,o.kt)("li",{parentName:"ol"},"Calls from ",(0,o.kt)("strong",{parentName:"li"},"[client-other]")," ","\u2192"," ",(0,o.kt)("strong",{parentName:"li"},"[nginx]")," are not declared and therefore blocked (red arrow). Click on the arrow to see what to do about it.")),(0,o.kt)("admonition",{title:"Done!",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Otterize did its job of both protecting the server ",(0,o.kt)("em",{parentName:"p"},"and")," allowing intended access.")),(0,o.kt)("h3",{id:"what-did-we-accomplish"},"What did we accomplish?"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Controlling access through Istio authorization policies no longer means touching authorization policies at all.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The server is now protected, and can be accessed only by clients which declared their intents, authenticated via mTLS connection with specific certificates.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Clients simply declare what they need to access with their intents files.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The next ",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl apply")," ensures that authorization policies automatically reflect the most recent intended pod-to-pod access."))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Expand to see what happened behind the scenes"),(0,o.kt)("p",null,"Otterize generated a specific Istio authorization policy on the ingress of the pod of the server, allowing the server to\nbe accessed by the pod of the client, based on that client's declared intent. Otterize uses labels to define the authorization policy and associate it\nwith a server in a namespace, and uses service accounts to identify clients, as Istio requires. This happens as follows:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"The server's pod is given a label ",(0,o.kt)("inlineCode",{parentName:"li"},"intents.otterize.com/server")," whose value uniquely represents that server.\nThe Istio authorization policy stipulates that it applies to the ingress of server pods with this label."),(0,o.kt)("li",{parentName:"ol"},"The client's service account is looked up through its pod, and used in the policy.\nThe authorization policy stipulates that only services with this service account can access the server.\nIn the event that the service account is shared by multiple services, an Event is placed on the ",(0,o.kt)("inlineCode",{parentName:"li"},"ClientIntent")," to warn about this, which is also picked up as a warning in Otterize Cloud, if connected.")),(0,o.kt)("p",null,"Otterize saved us from doing all this work: by simply declaring the client's intents in ",(0,o.kt)("inlineCode",{parentName:"p"},"intents.yaml"),",\nall the appropriate configuration was managed automatically behind the scenes."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/reference/configuration/intents-operator#istio-authorizationpolicy"},"Learn more about Istio authorization policies and Otterize"),".")),(0,o.kt)("admonition",{title:"Bonus tutorial",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Try to create an intents file yourself for ",(0,o.kt)("strong",{parentName:"p"},"client-other"),", and apply it to allow this other client to call the server.")),(0,o.kt)("h3",{id:"whats-next"},"What's next"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Get started with the ",(0,o.kt)("a",{parentName:"li",href:"/quickstart/visualization/k8s-istio-watcher"},"Otterize network mapper for Istio")," to help you bootstrap intents files with HTTP resources\nfor use in ",(0,o.kt)("a",{parentName:"li",href:"/intent-based-access-control"},"intent-based access control (IBAC)"),".")),(0,o.kt)("h2",{id:"teardown"},"Teardown"),(0,o.kt)("p",null,"To remove Istio and the deployed examples run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"helm uninstall istio-base -n istio-system\nkubectl delete namespace otterize-tutorial-istio\n")))}d.isMDXComponent=!0},6787:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/protected-edge-90cc9ce50b1c56c78429d9c2f82ca2cd.png"},1404:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/protected-eeb2b8a73187dc960a1e0a9e8c84efa6.png"}}]);