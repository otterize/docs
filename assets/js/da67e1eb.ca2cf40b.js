"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[880],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>y});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,y=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(y,i(i({ref:t},p),{},{components:n})):a.createElement(y,i({ref:t},p))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2524:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(8168),r=(n(6540),n(5680));const o={sidebar_position:2,title:"Configuring Kafka brokers"},i=void 0,l={unversionedId:"reference/intents-operator/configuration",id:"reference/intents-operator/configuration",title:"Configuring Kafka brokers",description:"The intents operator is able to create network policies with zero configuration. But in order to apply Kafka ACLs to a Kafka broker, the operator must know how to connect.",source:"@site/docs/reference/intents-operator/configuration.mdx",sourceDirName:"reference/intents-operator",slug:"/reference/intents-operator/configuration",permalink:"/reference/intents-operator/configuration",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/reference/intents-operator/configuration.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Configuring Kafka brokers"},sidebar:"docSidebar",previous:{title:"Helm chart",permalink:"/reference/intents-operator/helm-chart"},next:{title:"Network mapper",permalink:"/reference/network-mapper/"}},s={},c=[{value:"Full annotated example",id:"full-annotated-example",level:2},{value:"Workload name",id:"workload-name",level:3},{value:"Address (<code>addr</code>)",id:"address-addr",level:3},{value:"Disable auto create intents for operator (<code>noAutoCreateIntentsForOperator</code>)",id:"disable-auto-create-intents-for-operator-noautocreateintentsforoperator",level:3},{value:"TLS",id:"tls",level:3},{value:"Topic scope",id:"topic-scope",level:3},{value:"Allow unauthenticated access to all topics",id:"allow-unauthenticated-access-to-all-topics",level:4},{value:"Allow authenticated access to <code>mytopic</code> (or deny all unauthenticated access)",id:"allow-authenticated-access-to-mytopic-or-deny-all-unauthenticated-access",level:4},{value:"Allow intended access to <code>mytopic-intended</code> with a <code>topic scope</code> and an <code>intent</code>",id:"allow-intended-access-to-mytopic-intended-with-a-topic-scope-and-an-intent",level:4}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.yg)(d,(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"The intents operator is able to create network policies with zero configuration. But in order to apply Kafka ACLs to a Kafka broker, the operator must know how to connect."),(0,r.yg)("p",null,"To tell the operator how to do so, you must create a ",(0,r.yg)("inlineCode",{parentName:"p"},"KafkaServerConfig")," resource. It is recommended to create this resource in the same namespace as the Kafka broker,\nand manage its lifespan alongside the broker. If you deploy a chart that deploys a Kafka broker, or another resource that deploys a broker, you should deploy this ",(0,r.yg)("inlineCode",{parentName:"p"},"KafkaServerConfig")," alongside those."),(0,r.yg)("p",null,"Here is an annotated example of a ",(0,r.yg)("inlineCode",{parentName:"p"},"KafkaServerConfig"),", followed by an in-depth explanation for each section."),(0,r.yg)("h2",{id:"full-annotated-example"},"Full annotated example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: k8s.otterize.com/v2beta1\nkind: KafkaServerConfig\nmetadata:\n  name: kafkabroker  # the name of the KafkaServerConfig resource\nspec:\n  service:\n    name: ecomm-events # the name of the Otterize service, as it would appear in ClientIntents as the destination.\n    kind: Deployment # OPTIONAL: the kubernetes kind of the service you want to protect (Deployment, StatefulSet, Service, etc.)\n  addr: ecommevents.namespace:9092 # the address the intents operator will connect to in order to apply ACLs to this broker\n  noAutoCreateIntentsForOperator: false # By default, the operator automatically creates a ClientIntent for itself to this server, so that it\'s able to connect. To disable, set to "true".\n  tls: # this section informs the operator where to find the credentials to authenticate with the broker via mTLS. The values here are the defaults set by the otterize-kubernetes chart.\n    certFile: /etc/otterize-spire/cert.pem\n    keyFile: /etc/otterize-spire/key.pem\n    rootCAFile: /etc/otterize-spire/ca.pem\n  topics: # configuration for topic scope - how ACLs should be applied to each topic or set of topics.\n    - topic: "*" # A specific topic or a prefix. Can be "*" for all.\n      pattern: literal # Prefix or literal. Use literal for "*".\n      clientIdentityRequired: false # Whether client identity is required. If set to true to, access by anonymous users will be denied.\n      intentsRequired: false # Whether intents are required - if set to true, all access will be denied unless intents are declared\n')),(0,r.yg)("h3",{id:"workload-name"},"Workload name"),(0,r.yg)("p",null,"The name of the workload as it appears in ClientIntents.\nFor example:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: k8s.otterize.com/v2beta1\nkind: ClientIntents\n[...]\nspec:\n[...]\n  targets:\n    - kafka:\n        name: ecomm-events # here!\n")),(0,r.yg)("h3",{id:"address-addr"},"Address (",(0,r.yg)("inlineCode",{parentName:"h3"},"addr"),")"),(0,r.yg)("p",null,"The address the intents operator will connect to in order to apply and remove ACLs resulting from ",(0,r.yg)("inlineCode",{parentName:"p"},"ClientIntents")," and the KafkaServerConfig's ",(0,r.yg)("inlineCode",{parentName:"p"},"topics")," section."),(0,r.yg)("h3",{id:"disable-auto-create-intents-for-operator-noautocreateintentsforoperator"},"Disable auto create intents for operator (",(0,r.yg)("inlineCode",{parentName:"h3"},"noAutoCreateIntentsForOperator"),")"),(0,r.yg)("p",null,"By default, the operator automatically creates a ClientIntent for itself to this server, so that it's able to connect. The default value for this configuration is ",(0,r.yg)("inlineCode",{parentName:"p"},"false"),". To disable, set to ",(0,r.yg)("inlineCode",{parentName:"p"},"true"),"."),(0,r.yg)("h3",{id:"tls"},"TLS"),(0,r.yg)("p",null,"Where the intents operator will find credentials mounted to its pod to authenticate with the Kafka broker.\nIf using the ",(0,r.yg)("inlineCode",{parentName:"p"},"otterize-kubernetes")," chart, the values in the example above are correct."),(0,r.yg)("h3",{id:"topic-scope"},"Topic scope"),(0,r.yg)("p",null,"Using topic scope, you can gradually roll out Otterize to your Kafka cluster. Select a subset of topics to apply mTLS and/or intents to and start with those, without affecting the rest."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Unauthenticated - client identity not required:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"clientIdentityRequired: false\nintentsRequired: false\n"))),(0,r.yg)("li",{parentName:"ul"},"Authenticated - client identity required:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"clientIdentityRequired: true\nintentsRequired: false\n"))),(0,r.yg)("li",{parentName:"ul"},"Authorized - client identity and an intent are required:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"clientIdentityRequired: true\nintentsRequired: true\n")))),(0,r.yg)("p",null,"Here are example configurations for topic scope and the resulting ACLs."),(0,r.yg)("h4",{id:"allow-unauthenticated-access-to-all-topics"},"Allow unauthenticated access to all topics"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Topic scope"',title:'"Topic','scope"':!0},'- topic: "*"\n  pattern: literal\n  clientIdentityRequired: false\n  intentsRequired: false\n')),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Kafka ACL"',title:'"Kafka','ACL"':!0},"(none)\n")),(0,r.yg)("h4",{id:"allow-authenticated-access-to-mytopic-or-deny-all-unauthenticated-access"},"Allow authenticated access to ",(0,r.yg)("inlineCode",{parentName:"h4"},"mytopic")," (or deny all unauthenticated access)"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Topic scope"',title:'"Topic','scope"':!0},'- topic: "mytopic"\n  pattern: literal\n  clientIdentityRequired: true\n  intentsRequired: false\n')),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Kafka ACL"',title:'"Kafka','ACL"':!0},"ResourcePattern(resourceType=TOPIC, name=mytopic, patternType=LITERAL), versionedAcls :\nSet(User:ANONYMOUS has DENY permission for operations: ALL from hosts: *,\n    User:* has ALLOW permission for operations: ALL from hosts: *)\n")),(0,r.yg)("h4",{id:"allow-intended-access-to-mytopic-intended-with-a-topic-scope-and-an-intent"},"Allow intended access to ",(0,r.yg)("inlineCode",{parentName:"h4"},"mytopic-intended")," with a ",(0,r.yg)("inlineCode",{parentName:"h4"},"topic scope")," and an ",(0,r.yg)("inlineCode",{parentName:"h4"},"intent")),(0,r.yg)("p",null,"Otterize generates two ACLs for this access pattern:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"The topic scope will generate an ACL to block all access to the topic at first."),(0,r.yg)("li",{parentName:"ol"},"The intent will set a specific ACL to allow the caller to access the topic.")),(0,r.yg)("p",null,"If you set the topic scope in the KSC as follows:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Topic scope"',title:'"Topic','scope"':!0},'- topic: "mytopic-intended"\n  pattern: literal\n  clientIdentityRequired: true\n  intentsRequired: true\n')),(0,r.yg)("p",null,"Otterize will generate this ACL:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Kafka ACL"',title:'"Kafka','ACL"':!0},"ResourcePattern(resourceType=TOPIC, name=mytopic-intended, patternType=LITERAL), versionedAcls :\nSet(User:ANONYMOUS has DENY permission for operations: ALL from hosts: *)\n")),(0,r.yg)("p",null,"And when you declare and apply this intent:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: k8s.otterize.com/v2beta1\nkind: ClientIntents\n[...]\nspec:\n  workload:\n    name: interactive\n  targets:\n    - kafka:\n        name: kafka.kafka\n        topics:\n          - name: mytopic-intended\n            operations: [ all ]\n")),(0,r.yg)("p",null,"Otterize will add this ACL:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Kafka ACL"',title:'"Kafka','ACL"':!0},"ResourcePattern(resourceType=TOPIC, name=mytopic-intended, patternType=LITERAL), versionedAcls :\nSet(User:ANONYMOUS has DENY permission for operations: ALL from hosts: *,\n    User:CN=interactive.ibac-for-kafka,O=SPIRE,C=US has ALLOW permission for operations: ALL from hosts: *)\n")),(0,r.yg)("p",null,"Together, these ACLs will ensure that only clients that have declared intents will be able to access the specific topic."))}u.isMDXComponent=!0}}]);