"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8750],{5680:(e,t,n)=>{n.d(t,{xA:()=>m,yg:()=>y});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=s(n),g=r,y=d["".concat(p,".").concat(g)]||d[g]||c[g]||i;return n?a.createElement(y,l(l({ref:t},m),{},{components:n})):a.createElement(y,l({ref:t},m))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=g;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9783:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(8168),r=(n(6540),n(5680));const i={sidebar_position:3,title:"Reference",hide_table_of_contents:!1},l=void 0,o={unversionedId:"features/network-mapping-network-policies/reference/README",id:"features/network-mapping-network-policies/reference/README",title:"Reference",description:"ClientIntents example (YAML)",source:"@site/docs/features/network-mapping-network-policies/reference/README.mdx",sourceDirName:"features/network-mapping-network-policies/reference",slug:"/features/network-mapping-network-policies/reference/",permalink:"/features/network-mapping-network-policies/reference/",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/features/network-mapping-network-policies/reference/README.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Reference",hide_table_of_contents:!1},sidebar:"docSidebar",previous:{title:"Egress NetworkPolicy Automation",permalink:"/features/network-mapping-network-policies/tutorials/k8s-egress-access-control-tutorial"},next:{title:"Network Policies Deep Dive",permalink:"/features/network-mapping-network-policies/reference/Network-Policies-Deep-Dive"}},p={},s=[{value:"ClientIntents example (YAML)",id:"clientintents-example-yaml",level:2},{value:"ClientIntents and DNS values",id:"clientintents-and-dns-values",level:4},{value:"Helm Chart options",id:"helm-chart-options",level:2},{value:"Network mapper parameters",id:"network-mapper-parameters",level:2},{value:"CLI: Network mapper commands",id:"cli-network-mapper-commands",level:2},{value:"Options",id:"options",level:4},{value:"Returns",id:"returns",level:4},{value:"Options",id:"options-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Options",id:"options-2",level:4},{value:"Returns",id:"returns-2",level:4}],m={toc:s},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.yg)(d,(0,a.A)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"clientintents-example-yaml"},"ClientIntents example (YAML)"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: k8s.otterize.com/v1alpha3\nkind: ClientIntents\nmetadata:\n  name: client-server-access\n  namespace:  otterize-example\nspec:\n  service:\n    # The name of the service initiating the connection\n    name: client\n  calls:\n    # The name of the service receiving the connection. Multiple names can be provided\n    - name: server\n    # multiple services can be added\n    - name: orderservice\n      # Optional granular rules can be added like the HTTPResources options below.\n      type: http\n      HTTPResources:\n        - path: /orders/*\n          methods: [ get, post ]\n")),(0,r.yg)("h4",{id:"clientintents-and-dns-values"},"ClientIntents and DNS values"),(0,r.yg)("p",null,"When a ClientIntent is specified utilizing DNS identifiers, such as domain names, it initiates a sequence of operations to integrate the relevant IP addresses into the respective NetworkPolicies."),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"The Network Mapper incorporates a DNS cache layer, which identifies and archives all resolved DNS records alongside their corresponding IPv4 and IPv6 IP addresses."),(0,r.yg)("li",{parentName:"ol"},"Without a ClientIntent associated with the given domain or its related IP addresses, Otterize will propose a policy tailored to the observed traffic."),(0,r.yg)("li",{parentName:"ol"},"Upon the application of a ClientIntent with a domain name present in the cache, the NetworkMapper dynamically updates the intent\u2019s ",(0,r.yg)("inlineCode",{parentName:"li"},"status")," section at one-second intervals with any newly identified IP addresses. It is important to note that Otterize retains all previously identified IP addresses to ensure backward compatibility."),(0,r.yg)("li",{parentName:"ol"},"The Intents Operator reviews changes within the ",(0,r.yg)("inlineCode",{parentName:"li"},"status")," section and amends the associated NetworkPolicy to include these newly discovered IP addresses.")),(0,r.yg)("h2",{id:"helm-chart-options"},"Helm Chart options"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Key"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"global.deployment.networkMapper")),(0,r.yg)("td",{parentName:"tr",align:null},"Whether or not to deploy network-mapper."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"true"))))),(0,r.yg)("p",null,"View the ",(0,r.yg)("a",{parentName:"p",href:"/reference/otterize-chart"},"Helm chart reference")," for all other options"),(0,r.yg)("h2",{id:"network-mapper-parameters"},"Network mapper parameters"),(0,r.yg)("p",null,"All configurable parameters of the network mapper can be configured under the alias ",(0,r.yg)("inlineCode",{parentName:"p"},"networkMapper"),".\nFurther information about network mapper parameters can be found ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/otterize/helm-charts/tree/main/network-mapper"},"in the network mapper's chart"),"."),(0,r.yg)("h2",{id:"cli-network-mapper-commands"},"CLI: Network mapper commands"),(0,r.yg)("p",null,"All ",(0,r.yg)("inlineCode",{parentName:"p"},"otterize network-mapper")," commands share a set of optional flags which will not be repeated in the documentation\nfor each command."),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"otterize network-mapper reset")),(0,r.yg)("p",null,"Resets the network mapper by deleting all map information built up so far in memory."),(0,r.yg)("hr",null),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"otterize network-mapper list [-n <namespace1>,<namespace2>,...]")),(0,r.yg)("p",null,"Return the network map built by the network mapper since it started, or since it was reset,\nas a list of clients and the servers they call."),(0,r.yg)("h4",{id:"options"},"Options"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-n")," or ",(0,r.yg)("inlineCode",{parentName:"td"},"--namespaces")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Include only clients in these namespaces (comma-separated).")))),(0,r.yg)("h4",{id:"returns"},"Returns"),(0,r.yg)("p",null,"Here's a partial output from ",(0,r.yg)("inlineCode",{parentName:"p"},"otterize network-mapper list -n otterize-ecom-demo"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"cartservice in namespace otterize-ecom-demo calls:\n  - redis-cart\ncheckoutservice in namespace otterize-ecom-demo calls:\n  - cartservice\n  - currencyservice\n  - emailservice\n  - paymentservice\n  - productcatalogservice\n  - shippingservice\nfrontend in namespace otterize-ecom-demo calls:\n  - adservice\n  - cartservice\n  - checkoutservice\n  - currencyservice\n  - productcatalogservice\n  - recommendationservice\n  - shippingservice\nloadgenerator in namespace otterize-ecom-demo calls:\n  - frontend\nrecommendationservice in namespace otterize-ecom-demo calls:\n  - productcatalogservice\n")),(0,r.yg)("hr",null),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"otterize network-mapper visualize [--format=png | --format=jpg] [-n <namespace1>,<namespace2>,...] -o <path>"),"\nReturn the network map built by the network mapper since it started, or since it was reset,\nas an image."),(0,r.yg)("p",null,"Uses GraphViz (specifically go-graphviz) to generate the image."),(0,r.yg)("h4",{id:"options-1"},"Options"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"--format")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"png")),(0,r.yg)("td",{parentName:"tr",align:null},'Image output format: "png" or "jpg".')),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-n")," or ",(0,r.yg)("inlineCode",{parentName:"td"},"--namespaces")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Include only clients in these namespaces (comma-separated).")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-o")," or ",(0,r.yg)("inlineCode",{parentName:"td"},"--output-path")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Filename for the image.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"--exclude-labels")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},'A list of labels that would exclude services from list/export. example: "include=false"')),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"--exclude-services")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},'A list of service to exclude from list/export. example: "service1,service2"')))),(0,r.yg)("h4",{id:"returns-1"},"Returns"),(0,r.yg)("p",null,"Here's the image generated by running ",(0,r.yg)("inlineCode",{parentName:"p"},"otterize network-mapper visualize -n otterize-ecom-demo -o otterize-ecom-demo.png"),":\n",(0,r.yg)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/29180932/221423644-df8fbba2-dca1-4c56-baeb-f0d0afc55eb1.png",alt:"graph"})),(0,r.yg)("hr",null),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"otterize network-mapper export [--format] [-n <namespace1>,<namespace2>,...] [-o <path>] [--output-type <output-type>]")),(0,r.yg)("p",null,"Return the network map built by the network mapper since it started, or since it was reset,\nas YAML ",(0,r.yg)("a",{parentName:"p",href:"/overview/intent-based-access-control"},"client intents file(s)")," or as JSON file(s)."),(0,r.yg)("h4",{id:"options-2"},"Options"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"--format")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"yaml")),(0,r.yg)("td",{parentName:"tr",align:null},"Specifies the format for the export: either ",(0,r.yg)("inlineCode",{parentName:"td"},"yaml")," or ",(0,r.yg)("inlineCode",{parentName:"td"},"json"),".")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-n")," or ",(0,r.yg)("inlineCode",{parentName:"td"},"--namespaces")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Export only clients in these namespaces (comma-separated).")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"-o")," or ",(0,r.yg)("inlineCode",{parentName:"td"},"--output")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"STDOUT")),(0,r.yg)("td",{parentName:"tr",align:null},"Filename or directory for redirecting the output.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"--output-type")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"single-file")),(0,r.yg)("td",{parentName:"tr",align:null},"Whether the output should be written as a single file (",(0,r.yg)("inlineCode",{parentName:"td"},"single-file"),") or as multiple files in a directory (",(0,r.yg)("inlineCode",{parentName:"td"},"dir"),"). Requires the ",(0,r.yg)("inlineCode",{parentName:"td"},"-o")," or ",(0,r.yg)("inlineCode",{parentName:"td"},"--output")," to point to a directory.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"--server")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Export only intents for clients that call this server. The server name must be specified with both service name and namespace, in the format ",(0,r.yg)("inlineCode",{parentName:"td"},"<SERVERNAME>.<SERVER_NAMESPACE>"),". Example: ",(0,r.yg)("inlineCode",{parentName:"td"},"cartservice.otterize-ecom-demo"),".")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"--exclude-labels")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"A list of labels that would exclude services from list/export. Example: ",(0,r.yg)("inlineCode",{parentName:"td"},"include=false")," would exclude any service labeled with ",(0,r.yg)("inlineCode",{parentName:"td"},"include=false")," from being included in list/export.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"--exclude-services")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"A list of services to exclude from list/export. Example: ",(0,r.yg)("inlineCode",{parentName:"td"},"service1,service2"),".")))),(0,r.yg)("h4",{id:"returns-2"},"Returns"),(0,r.yg)("p",null,"Here's a partial output from ",(0,r.yg)("inlineCode",{parentName:"p"},"otterize network-mapper export -n otterize-ecom-demo"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"apiVersion: k8s.otterize.com/v1alpha3\nkind: ClientIntents\nmetadata:\n  name: cartservice\n  namespace: otterize-ecom-demo\nspec:\n  service:\n    name: cartservice\n  calls:\n    - name: redis-cart\n      type: http\n---\napiVersion: k8s.otterize.com/v1alpha3\nkind: ClientIntents\nmetadata:\n  name: checkoutservice\n  namespace: otterize-ecom-demo\nspec:\n  service:\n    name: checkoutservice\n  calls:\n    - name: cartservice\n      type: http\n    - name: currencyservice\n      type: http\n")))}c.isMDXComponent=!0}}]);