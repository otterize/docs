"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8834],{5680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>f});var r=t(6540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=l(t),m=o,f=p["".concat(c,".").concat(m)]||p[m]||u[m]||a;return t?r.createElement(f,s(s({ref:n},d),{},{components:t})):r.createElement(f,s({ref:n},d))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4445:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=t(8168),o=(t(6540),t(5680));const a={sidebar_position:7,title:"ClientIntents CRD"},s=void 0,i={unversionedId:"reference/ClientIntents CRD/README",id:"reference/ClientIntents CRD/README",title:"ClientIntents CRD",description:"ClientIntents are used to specify the required and intended access for a particular workload to function successfully. The Otterize operators then use this information to generate the necessary credentials and policies to enable the intended access.",source:"@site/docs/reference/ClientIntents CRD/README.mdx",sourceDirName:"reference/ClientIntents CRD",slug:"/reference/ClientIntents CRD/",permalink:"/reference/ClientIntents CRD/",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/reference/ClientIntents CRD/README.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"ClientIntents CRD"},sidebar:"docSidebar",previous:{title:"Workload identity and resolution",permalink:"/reference/workload-identities/"},next:{title:"Differences between v1 and v2",permalink:"/reference/ClientIntents CRD/migrateToV2"}},c={},l=[{value:"ClientIntents v2",id:"clientintents-v2",level:2},{value:"ClientIntents v1 (deprecated)",id:"clientintents-v1-deprecated",level:2}],d={toc:l},p="wrapper";function u(e){let{components:n,...t}=e;return(0,o.yg)(p,(0,r.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"ClientIntents are used to specify the required and intended access for a particular workload to function successfully. The Otterize operators then use this information to generate the necessary credentials and policies to enable the intended access."),(0,o.yg)("p",null,"Review for ClientIntents is normally done as part of the normal code review process, either in the same repository of the workload, in a different repository owned by the platform or security teams, or by additional reviewers with ",(0,o.yg)("a",{parentName:"p",href:"https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners#codeowners-and-branch-protection"},"aid of the CODEOWNERS feature for additional required reviewers"),"."),(0,o.yg)("p",null,"Some users of Otterize also choose to perform additional validation through ",(0,o.yg)("a",{parentName:"p",href:"/reference/validating-clientintents"},"Kyverno validation policies")," or the native ",(0,o.yg)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/access-authn-authz/validating-admission-policy/"},"Kubernetes ValidatingAdmissionPolicies")," available since v1.30."),(0,o.yg)("h2",{id:"clientintents-v2"},"ClientIntents v2"),(0,o.yg)("p",null,"The following is a fully annotated example of the CRD, demonstrating how you might specify different kinds of access."),(0,o.yg)("admonition",{title:"Note",type:"info"},(0,o.yg)("p",{parentName:"admonition"},"Always use v2: While v1 is still supported, it is deprecated and only supported for backwards compatibility reasons. v2 is easier to understand and use and is an improved version based on customer feedback.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: k8s.otterize.com/v2beta1\nkind: ClientIntents\nmetadata:\n  name: intents-for-checkoutservice\n  namespace: otterize-ecom-demo\nspec:\n  workload:\n    name: checkoutservice # Name of the workload initiating calls\n    kind: Deployment # Type of workload (e.g., Deployment, StatefulSet, etc.)\n  targets:\n    - kubernetes:\n        name: emailservice # Target Kubernetes resource name\n        kind: Service # Kind of the Kubernetes resource\n    - service: # Equivalent to kubernetes target with kind: Service\n        name: orderservice # Target Service name\n        http:\n          - path: /orders # HTTP path to target\n            methods: [ GET ] # Allowed HTTP methods\n    - kafka:\n        name: kafka-prod # Kafka cluster name\n        topics:\n          - name: orders # Kafka topic\n            operations: [ read, write ] # Allowed operations on the topic\n    - sql:\n        name: mysql-db # SQL database resource name\n        privileges:\n          - databaseName: ecommerce # Target database name\n            table: orders # Table name\n            operations: [ SELECT, INSERT ] # Allowed SQL operations\n    - internet:\n        domains:\n          - 'api.example.com' # Allowed domain names\n          - '*.example.com' # Allowed domain names with '.example.com' suffix\n        ips:\n          - 192.168.1.1 # Allowed IP addresses\n        ports:\n          - 443 # Allowed ports for the IP addresses or domains\n    - aws:\n        arn: arn:aws:s3:::my-bucket # AWS resource ARN\n        actions:\n          - s3:GetObject # Allowed AWS actions\n          - s3:PutObject\n    - gcp:\n        resource: projects/my-project-id/buckets/my-bucket # GCP resource name\n        permissions:\n          - storage.objects.get # Allowed GCP permissions\n          - storage.objects.create\n    - azure:\n        scope: /subscriptions/my-subscription/resourceGroups/my-group/providers/Microsoft.Storage/storageAccounts/myaccount # Azure resource scope\n        actions:\n          - Microsoft.Storage/storageAccounts/blobServices/containers/read # Allowed Azure actions\n        dataActions:\n          - Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read # Allowed Azure data actions\n        roles:\n          - Storage Blob Data Reader # Allowed Azure roles\n        keyVaultPolicy: # Azure Key Vault policy\n          secretPermissions:\n            - get\n            - list\n          keyPermissions:\n            - decrypt\n            - encrypt\n\n")),(0,o.yg)("h2",{id:"clientintents-v1-deprecated"},"ClientIntents v1 (deprecated)"),(0,o.yg)("admonition",{title:"Note",type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"Always use v2: While v1 is still supported, it is deprecated and only supported for backwards compatibility reasons. v2 is easier to understand and use and is an improved version based on customer feedback.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: k8s.otterize.com/v1alpha3\nkind: ClientIntents\nmetadata:\n  name: intents-for-inventoryservice\n  namespace: otterize-retail-demo\nspec:\n  service:\n    name: inventoryservice # Name of the client workload initiating requests\n  calls:\n    - name: emailservice # Name of the Kubernetes resource (service)\n    - name: orderservice # Another Kubernetes service target\n      HTTPResources:\n        - path: /orders\n          methods: [ GET, POST ]\n    - name: arn:aws:s3:::inventory-bucket # AWS resource ARN\n      awsActions:\n        - s3:GetObject\n        - s3:PutObject\n    - name: /subscriptions/my-subscription/resourceGroups/my-group/providers/Microsoft.Storage/storageAccounts/mystorageaccount # Azure resource scope\n      azureRoles:\n        - Storage Blob Data Reader\n        - Storage Blob Data Contributor\n      azureKeyVaultPolicy:\n        secretPermissions:\n          - get\n          - list\n        keyPermissions:\n          - decrypt\n          - encrypt\n    - name: projects/my-project-id/buckets/my-bucket # GCP resource name\n      gcpPermissions:\n        - storage.objects.get\n        - storage.objects.create\n    - name: kafka-prod # Kafka cluster name\n      kafkaTopics:\n        - name: inventory_updates # Kafka topic name\n          operations: [ produce, consume ]\n    - name: ecommerce-database # SQL database resource name\n      databaseResources:\n        - databaseName: inventory_db # Database name\n          table: products # Table name\n          operations: [ SELECT, UPDATE ] # Allowed SQL operations\n    - name: api.retail.example.com # Internet domain\n      internet:\n        domains:\n          - api.retail.example.com # Allowed domain names\n        ips:\n          - 203.0.113.10 # Allowed IP addresses\n        ports:\n          - 443 # Allowed ports for the IP addresses or domains\n")))}u.isMDXComponent=!0}}]);